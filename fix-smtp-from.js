// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è smtp-from –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
    user: process.env.DB_USER || 'chiwawa',
    host: process.env.DB_HOST || '212.15.49.139',
    database: process.env.DB_NAME || 'chiwawa',
    password: process.env.DB_PASS,
    port: process.env.DB_PORT || 5432,
});

async function fixSmtpFrom() {
    try {
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ smtp-from...');
        
        const client = await pool.connect();
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π smtp-user
        const userResult = await client.query(`
            SELECT setting_value FROM server_settings 
            WHERE setting_key = 'smtp-user'
        `);
        
        if (userResult.rows.length > 0) {
            const smtpUser = userResult.rows[0].setting_value;
            console.log('üìß –¢–µ–∫—É—â–∏–π SMTP user:', smtpUser);
            
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π smtp-from
            const fromResult = await client.query(`
                SELECT setting_value FROM server_settings 
                WHERE setting_key = 'smtp-from'
            `);
            
            if (fromResult.rows.length > 0) {
                const currentFrom = fromResult.rows[0].setting_value;
                console.log('üìß –¢–µ–∫—É—â–∏–π SMTP from:', currentFrom);
                
                if (currentFrom !== smtpUser) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º smtp-from —á—Ç–æ–±—ã –æ–Ω —Å–æ–≤–ø–∞–¥–∞–ª —Å smtp-user
                    await client.query(`
                        UPDATE server_settings 
                        SET setting_value = $1, updated_at = CURRENT_TIMESTAMP 
                        WHERE setting_key = 'smtp-from'
                    `, [smtpUser]);
                    
                    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω smtp-from —Å', currentFrom, '–Ω–∞', smtpUser);
                } else {
                    console.log('‚úÖ smtp-from —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
                }
            } else {
                console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ smtp-from –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        } else {
            console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ smtp-user –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        client.release();
        await pool.end();
        console.log('üéâ –ì–æ—Ç–æ–≤–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    }
}

fixSmtpFrom();
