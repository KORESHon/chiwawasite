// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞
// –°–æ–∑–¥–∞—Ç–µ–ª—å: GitHub Copilot

const axios = require('axios');

async function generatePluginToken() {
    try {
        console.log('üîß –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Ç–æ–∫–µ–Ω –¥–ª—è Minecraft –ø–ª–∞–≥–∏–Ω–∞...');
        
        // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
        const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
            email: 'dima2_05@mail.ru',
            password: 'Shadowfox555!'
        });
        
        if (loginResponse.status === 200) {
            const token = loginResponse.data.token;
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
            console.log('üé´ JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞:');
            console.log(token);
            console.log('');
            console.log('üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ config.yml –ø–ª–∞–≥–∏–Ω–∞ –≤ –ø–æ–ª–µ admin_token');
            console.log('');
            
            // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–æ–∫–µ–Ω
            console.log('üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω...');
            const verifyResponse = await axios.get('http://localhost:3000/api/auth/verify', {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            
            if (verifyResponse.status === 200) {
                console.log('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π!');
                console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${verifyResponse.data.user.nickname}`);
                console.log(`üîë –†–æ–ª—å: ${verifyResponse.data.user.role}`);
            }
            
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        }
        
    } catch (error) {
        if (error.response) {
            console.error(`‚ùå HTTP Error ${error.response.status}:`, error.response.data);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generatePluginToken();
