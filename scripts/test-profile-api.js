// –¢–µ—Å—Ç API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
// –°–æ–∑–¥–∞—Ç–µ–ª—å: ebluffy

const axios = require('axios');

const baseURL = 'http://localhost:3000';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testCredentials = {
    email: 'dima2_05@mail.ru',
    password: 'Shadowfox555!'
};

async function testProfileUpdateAPI() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è...\n');

    try {
        // –®–∞–≥ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        console.log('1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
        const loginResponse = await axios.post(`${baseURL}/api/auth/login`, testCredentials);
        
        if (!loginResponse.data.token) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        }
        
        const token = loginResponse.data.token;
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

        // –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...');
        const profileResponse = await axios.get(`${baseURL}/api/profile`, {
            headers: { Authorization: `Bearer ${token}` }
        });
        
        console.log(`–¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å: ${profileResponse.data.minecraft_nick} (${profileResponse.data.email})`);
        console.log(`Trust Level: ${profileResponse.data.trust_level} (${profileResponse.data.trust_level_name})`);

        // –®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º –∏ –±–∏–æ–≥—Ä–∞—Ñ–∏–µ–π
        console.log('\n3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–≤–æ–∑—Ä–∞—Å—Ç –∏ –±–∏–æ–≥—Ä–∞—Ñ–∏—è)...');
        const updateData = {
            age: 25,
            bio: '–¢–µ—Å—Ç–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è',
            first_name: '–¢–µ—Å—Ç–µ—Ä'
        };

        const updateResponse = await axios.put(`${baseURL}/api/profile`, updateData, {
            headers: { Authorization: `Bearer ${token}` }
        });

        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', updateResponse.data.user);

        // –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
        const updatedProfileResponse = await axios.get(`${baseURL}/api/profile`, {
            headers: { Authorization: `Bearer ${token}` }
        });

        const updatedProfile = updatedProfileResponse.data;
        console.log(`–í–æ–∑—Ä–∞—Å—Ç: ${updatedProfile.age}`);
        console.log(`–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: ${updatedProfile.bio}`);
        console.log(`–ò–º—è: ${updatedProfile.first_name}`);

        // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ admin_logs
        console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ admin_logs...');
        // –≠—Ç–æ—Ç —à–∞–≥ —Ç—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, –Ω–æ –º—ã –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏ –≤ admin_logs —Å action="profile_update"');

        console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã API –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error.response?.data || error.message);
        
        if (error.response?.status === 404) {
            console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        }
        
        if (error.response?.status === 401) {
            console.log('üí° –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testProfileUpdateAPI();
