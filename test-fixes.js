// –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π - –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
const axios = require('axios');

async function testFixes() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...\n');

        // 1. –¢–µ—Å—Ç API —Å –æ–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–º
        console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å —Ä–µ–∞–ª—å–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º (–æ–Ω–ª–∞–π–Ω)...');
        const onlineResponse = await axios.get('http://localhost:3000/api/settings/server-info');
        const onlineData = onlineResponse.data;
        
        console.log(`   –°—Ç–∞—Ç—É—Å: ${onlineData.status} (online: ${onlineData.online})`);
        console.log(`   –ò–≥—Ä–æ–∫–æ–≤: ${onlineData.players.online}/${onlineData.players.max}`);
        console.log(`   TPS: ${onlineData.performance.tps}, Ping: ${onlineData.performance.ping}ms`);
        console.log(`   –í–µ—Ä—Å–∏—è: ${onlineData.server.version}`);
        
        if (onlineData.status === 'online' && onlineData.online === true) {
            console.log('   ‚úÖ –°–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        } else {
            console.log('   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–Ω–ª–∞–π–Ω');
        }

        // 2. –¢–µ—Å—Ç API —Å –æ—Ñ—Ñ–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–º (–≤—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ–º IP)
        console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º (–æ—Ñ—Ñ–ª–∞–π–Ω)...');
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ–º IP –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await axios.post('http://localhost:3000/api/admin/settings', {
            serverSettings: { 'server-ip': 'test.invalid' }
        }, {
            headers: { 'Authorization': `Bearer ${await getAdminToken()}` }
        }).catch(() => {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –≤–æ–∑–º–æ–∂–Ω–æ endpoint –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç
            console.log('   ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ IP –¥–ª—è —Ç–µ—Å—Ç–∞');
        });

        // 3. –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ API —Ç–æ–∫–µ–Ω–∞ –ø–ª–∞–≥–∏–Ω–∞
        console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –ø–ª–∞–≥–∏–Ω–∞...');
        const pluginToken = '06e93ee99d3ee064af6b7a91b2baae1768a6f8c8713fdfdd8e16d2383aedc23586ea697a1ee038b16437a8eca93287dabbd49e51cf55b15bb6a382bd9dbe40a8';
        
        try {
            const pluginResponse = await axios.get('http://localhost:3000/api/plugin/server-info', {
                headers: { 'Authorization': `Bearer ${pluginToken}` }
            });
            
            if (pluginResponse.data.success) {
                console.log('   ‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–ª–∞–≥–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
                console.log(`   API –≤–µ—Ä—Å–∏—è: ${pluginResponse.data.api_version}`);
            } else {
                console.log('   ‚ùå –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–ª–∞–≥–∏–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–ª–∞–≥–∏–Ω–∞: ${error.message}`);
        }

        // 4. –¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
        console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–≥—Ä–æ–∫–∞...');
        try {
            const accessResponse = await axios.get('http://localhost:3000/api/plugin/server-access?nickname=ebluffy', {
                headers: { 'Authorization': `Bearer ${pluginToken}` }
            });
            
            if (accessResponse.data.success) {
                console.log(`   ‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: hasAccess=${accessResponse.data.hasAccess}`);
                console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${accessResponse.data.reason}`);
            } else {
                console.log('   ‚ùå –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –¥–æ—Å—Ç—É–ø–∞: ${error.message}`);
        }

        console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –ß–ï–ö–õ–ò–°–¢:');
        console.log('‚úÖ 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ frontend');
        console.log('‚úÖ 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ID —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ø—Ä–æ—Ñ–∏–ª—å)');
        console.log('‚úÖ 3. –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞');
        console.log('‚úÖ 4. –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –≤–∞–ª–∏–¥–Ω—ã–π API —Ç–æ–∫–µ–Ω –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞');
        console.log('‚úÖ 5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç –≤ ApiClient.java');
        console.log('‚úÖ 6. –î–æ–±–∞–≤–ª–µ–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç /api/plugin/server-access');
        console.log('‚úÖ 7. –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω/–æ–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–≤');
        console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ:');
        console.log('   1. –î–µ–ø–ª–æ–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
        console.log('   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

async function getAdminToken() {
    try {
        const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
            email: 'dima2_05@mail.ru',
            password: 'Shadowfox555!'
        });
        return loginResponse.data.token;
    } catch (error) {
        console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥–º–∏–Ω —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤');
        return null;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testFixes();
