const axios = require('axios');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞');
console.log('==============================================');

async function testServerData() {
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π endpoint...');
        
        const response = await axios.get('http://localhost:3000/api/settings/server-info');
        const data = response.data;
        
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ:');
        console.log('');
        
        console.log('üìä –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:');
        console.log('   –°—Ç–∞—Ç—É—Å:', data.status);
        console.log('   –û–Ω–ª–∞–π–Ω:', data.online);
        console.log('   –ù–∞–∑–≤–∞–Ω–∏–µ:', data.server?.name);
        console.log('   IP:', data.server?.ip + ':' + data.server?.port);
        console.log('   –í–µ—Ä—Å–∏—è:', data.server?.version);
        console.log('   MOTD:', data.server?.motd);
        console.log('');
        
        console.log('‚ö° –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:');
        console.log('   Ping:', data.performance?.ping + 'ms');
        console.log('   TPS:', data.performance?.tps);
        console.log('');
        
        console.log('üë• –ò–ì–†–û–ö–ò:');
        console.log('   –û–Ω–ª–∞–π–Ω:', data.players?.online + '/' + data.players?.max);
        console.log('   –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:', data.players?.list?.length || 0);
        console.log('');
        
        // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        console.log('üîç –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò:');
        
        if (data.online === false) {
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä offline - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
            
            if (data.performance.ping === 0 && data.performance.tps === 0) {
                console.log('   ‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±–Ω—É–ª–µ–Ω–∞');
            } else {
                console.log('   ‚ùå –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            }
            
            if (data.players.online === 0) {
                console.log('   ‚úÖ –ò–≥—Ä–æ–∫–∏ offline');
            } else {
                console.log('   ‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω');
            }
            
            if (data.server.version === 'Unknown') {
                console.log('   ‚úÖ –í–µ—Ä—Å–∏—è –ø–æ–∫–∞–∑–∞–Ω–∞ –∫–∞–∫ Unknown');
            } else {
                console.log('   ‚ö†Ô∏è  –í–µ—Ä—Å–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω');
            }
            
        } else {
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä online - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
            console.log('   üì° Ping:', data.performance.ping + 'ms');
            console.log('   üìà TPS:', data.performance.tps);
            console.log('   üë• –ò–≥—Ä–æ–∫–∏:', data.players.online);
            console.log('   üéÆ –í–µ—Ä—Å–∏—è:', data.server.version);
        }
        
        console.log('');
        console.log('üïê –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', data.timestamp);
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

testServerData();
